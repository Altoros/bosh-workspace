meta:
  deployment_name: (( merge ))
  release:
    name: cf

  ha_proxy:
    ssl_pem: (( merge ))
  floating_static_ips: (( merge ))
  networks:
    z1:
      apps: cf1
    z2:
      apps: cf1

  nfs_server:
    address: (( "0.data.cf1." meta.deployment_name ".microbosh" ))
    allow_from_entries:
      - (( "*.*.cf1." meta.deployment_name ".microbosh" ))

  data_templates:
  - name: debian_nfs_server
    release: (( meta.release.name ))
  - name: postgres
    release: (( meta.release.name ))
  - name: etcd
    release: (( meta.release.name ))
  - name: etcd_metrics_server
    release: (( meta.release.name ))
  - name: nats
    release: (( meta.release.name ))
  - name: nats_stream_forwarder
    release: (( meta.release.name ))

  api_templates:
  - name: gorouter
    release: (( meta.release.name ))
  - name: cloud_controller_ng
    release: (( meta.release.name ))
  - name: cloud_controller_worker
    release: (( meta.release.name ))
  - name: cloud_controller_clock
    release: (( meta.release.name ))
  # - name: metron_agent
  #   release: (( meta.release.name ))
  - name: haproxy
    release: (( meta.release.name ))

  dea_templates:
  - name: dea_next
    release: (( meta.release.name ))
  - name: dea_logging_agent
    release: (( meta.release.name ))
  # - name: metron_agent
  #   release: (( meta.release.name ))

  hm9000_templates:
  - name: hm9000
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))


networks:
  - <<: (( merge ))
  - name: floating
    type: vip
    cloud_properties: {}

jobs:
  - name: data
    instances: 1
    persistent_disk: 102400
    templates: (( merge || meta.data_templates ))
    resource_pool: medium_z1
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))

  - name: api
    instances: 1
    templates: (( merge || meta.api_templates ))
    resource_pool: medium_z1
    networks:
      - name: floating
        static_ips: (( meta.floating_static_ips ))
      - name: cf1
        default: [dns, gateway]
    properties:
      networks: (( meta.networks.z1 ))
      metron_agent:
        zone: z1
      router:
        port: 81 # haproxy needs 80
        servers:
          z1:
            - (( "0.api.cf1." meta.deployment_name ".microbosh" ))
          z2: []
      ha_proxy:
        ssl_pem: (( meta.ha_proxy.ssl_pem ))

  - name: runner_z1
    instances: 1
    templates: (( merge || meta.dea_templates ))

  - name: ha_proxy_z1
    instances: 0

  - name: loggregator_z1
    instances: 0

  - name: loggregator_z2
    instances: 0

  - name: loggregator_trafficcontroller_z1
    instances: 0

  - name: loggregator_trafficcontroller_z2
    instances: 0

  - name: logs_z1
    instances: 0

  - name: logs_z2
    instances: 0

  - name: runner_z2
    instances: 0

  - name: nats_z1
    instances: 0

  - name: nats_z2
    instances: 0

  - name: stats_z1
    instances: 0

  - name: uaa_z1
    instances: 0

  - name: uaa_z2
    instances: 0

  - name: login_z1
    instances: 0

  - name: login_z2
    instances: 0

  - name: clock_global
    instances: 0

  - name: api_z1
    instances: 0

  - name: api_z2
    instances: 0

  - name: api_worker_z1
    instances: 0

  - name: api_worker_z2
    instances: 0

  - name: etcd_z1
    instances: 0

  - name: etcd_z2
    instances: 0

  - name: hm9000_z1
    instances: 0

  - name: hm9000_z2
    instances: 0

  - name: runner_z1
    instances: 0

  - name: runner_z2
    instances: 0

  - name: router_z1
    instances: 0

  - name: router_z2
    instances: 0

  - name: nfs_z1
    instances: 0

  - name: postgres_z1
    instances: 0

  - name: acceptance_tests
    instances: 0

  - name: smoke_tests
    instances: 0

properties:
  template_only:
    aws:
      <<: (( merge ))
      availability_zone: ~
      availability_zone2: ~

  ssl:
    skip_cert_verify: true
