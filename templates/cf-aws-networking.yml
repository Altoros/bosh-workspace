meta:
  ipmask: (( merge ))
  security_groups: (( merge ))
  subnet_ids:
    cf1: (( merge ))
    cf2: ~
  availability_zones: (( merge ))

  # expose 10.10.5.0-10.255.255.255 for services
  default_security_group_definitions:
  - name: public_networks
    rules:
    - protocol: all
      destination: 0.0.0.0-9.255.255.255
    - protocol: all
      destination: 10.10.5.0-10.255.255.255
    - protocol: all
      destination: 11.0.0.0-169.253.255.255
    - protocol: all
      destination: 169.255.0.0-172.15.255.255
    - protocol: all
      destination: 172.32.0.0-192.167.255.255
    - protocol: all
      destination: 192.169.0.0-255.255.255.255
  - name: dns
    rules:
    - protocol: tcp
      destination: 0.0.0.0/0
      ports: '53'
    - protocol: udp
      destination: 0.0.0.0/0
      ports: '53'

networks:
  - name: cf1
    type: manual
    subnets:
      - range: (( meta.ipmask ".3.0/24" ))
        name: default_unused
        reserved:
          - (( meta.ipmask ".3.2 - " meta.ipmask ".3.5" ))
        static:
          - (( meta.ipmask ".3.6 - " meta.ipmask ".3.50" ))
        gateway: (( meta.ipmask ".3.1" ))
        dns:
          - (( meta.ipmask ".0.2" ))
        cloud_properties:
          security_groups: (( meta.security_groups ))
          subnet: (( meta.subnet_ids.cf1 ))
          availability_zone: (( meta.availability_zones.cf1 ))

  - name: cf2
    type: manual
    subnets:
      - range: (( meta.ipmask ".4.0/24" ))
        name: default_unused
        reserved:
          - (( meta.ipmask ".4.2 - " meta.ipmask ".4.5" ))
        static:
          - (( meta.ipmask ".4.6 - " meta.ipmask ".4.50" ))
        gateway: (( meta.ipmask ".4.1" ))
        dns:
          - (( meta.ipmask ".0.2" ))
        cloud_properties:
          security_groups: (( meta.security_groups ))
          subnet: (( meta.subnet_ids.cf2 ))
          availability_zone: (( meta.availability_zones.cf2 ))

  - name: floating
    type: vip
    cloud_properties: {}
